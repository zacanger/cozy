let http.server = fn () {
    let instance = http.create_server()
    let id = instance.id

    return {
        # app.route(path, [optional_methods], callback(ctx))
        "route": fn () {
            mutable opts = []
            foreach x in ... {
                opts = opts.push(x)
            }
            mutable path = ""
            mutable mets = ["GET"]
            mutable handler = fn () { true }

            path = opts[0]
            if len(opts) == 3 {
                mets = opts[1]
                handler = opts[2]
            } else if len(opts) == 2 {
                handler = opts[1]
            }

            instance.route(id, path, mets, handler)
        },

        # app.listen(port, optional_callback(port))
        "listen": fn () {
            mutable opts = []
            foreach x in ... {
                opts = opts.push(x)
            }
            if len(opts) > 1 {
                opts[1](opts[0])
                instance.listen(id, opts[0])
            } else {
                instance.listen(id, opts[0])
            }
        },

        # app.static(directory, optional_mount_point)
        "static": fn () {
            mutable opts = []
            foreach x in ... {
                opts = opts.push(x)
            }
            if len(opts) > 1 {
                instance.static(id, opts[0], opts[1])
            } else {
                instance.static(id, opts[0])
            }
        }
    }
}
