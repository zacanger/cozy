# cozy's built-in http server is significantly faster than node with express,
# with a similar API, at least for simple examples.
# ab shows roughly 5000 rps for express, and 14000 for cozy.

let app = http.server()
app.static("./")
# route pattern can be a simple string
app.route("/foo", fn (req) {
    # implicit return example
    { "body": "in get foo" }
})
# or a regex
app.route("^/bar$", ["POST"], fn (req) {
    return { "body": "posted!" }
})
app.route("^/quux$", ["GET", "POST"], fn (req) {
    print(req)
    let content_type = "application/json"
    if req.method == "GET" {
        return {
            "body": json.serialize({ "got": "quux" }),
            "content_type": content_type,
        }
    } else {
        if req.content_type == "application/json" {
            return { "body": req.body, "content_type": content_type }
        } else {
            return { "status_code": 403 }
        }
    }
})
app.use(fn (req) { print(json.serialize(req)) })
# this is equivalent to:
app.log()
# regex is necessary to capture params
app.route("/test/(.*)", fn (req) { {"body": req.params.join("\n")} })
app.route("/form", ["POST"], fn (req) {
    # TODO:
    print(req.form)
    return { "status_code": 201 }
})
app.listen(8000, fn (x) { print("listening on", x) })
