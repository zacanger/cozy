# each of these fails to mutate the variable in the parent scope of the function

print("failing, mutating from a closure");
let f = fn() {
    mutable x = 0;
    return fn () {
        x++;
        x = x + 1;
        print(x);
    };
};

let g = f();
g();
g();

print("failing, mutating from inside hash returned from function");
let h = fn () {
    mutable y = 0;
    return {
        "inc": fn () {
            y++;
            print(y);
        }
    };
};
let j = h();
j["inc"]();
j["inc"]();

print("failing, mutating inside simple function to parent scope");
mutable a = 0;
let k = fn () {
    a = a + 1;
    print(a);
}
k();
k();

# print("working, mutating in same scope");
# mutable b = 0;
# b++;
# print(b);
# b++;
# print(b);
# b++;
# print(b);
