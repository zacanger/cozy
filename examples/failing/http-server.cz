# Example of how an http server might look
let app = net.http.server()
let port = 8000

app.static("./public")

# a req object should be a hash, with status,
# uri, body, and sub-hashes for headers, qs, and params
app.route("/foo", ["GET"], fn (req) {
    return { "status": 200, "body": "foo" }
})

app.route("/foo/:bar", ["GET"], fn (req) {
    return { "status": 200, "body": req.params.bar }
})

app.route("/baz", ["POST", "GET"], fn (req) {
    if (req.method == "GET") {
        return { "status": 200, "body": "GOT!" }
    }

    if (!req.body) {
        return { "status": 400, "body": "Body required" }
    }
})

app.listen(port, fn () {
    print("App listening on", port)
})
